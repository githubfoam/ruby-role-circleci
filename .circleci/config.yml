version: 2.1

jobs:

  build:
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            pip3 install pytest
            python manage.py test
      - store_artifacts:
          path: test-reports
          destination: test-reports

  build-ruby-role-image:
    docker:
      - image: circleci/python:3.6.1
    environment:
      MOLECULE_SCENARIO: centos74-goss    
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
            name: "Update all"
            command: sudo apt-get -qq update          
      - run:
          name: "Create virtualenv"
          command: |
            # whoami && ls -lai
            # sudo -H: set HOME variable to target user's home dir.
            sudo -H pip install virtualenv 
            # sudo pip install --upgrade pip
            virtualenv envmolecule
            # source envmolecule/bin/activate
            . envmolecule/bin/activate
            # pip install -r requirements.txt
            # pip install --upgrade pip
            # curl -fsSL https://goss.rocks/install | sudo sh
            # molecule lint --scenario-name ${MOLECULE_SCENARIO} 
            # python3 -m venv venv
            # . venv/bin/activate
            # pip install -r requirements.txt
      # - run:
      #     name: "Install goss"
      #     command: |
      #       curl -fsSL https://goss.rocks/install | sudo sh 
      # - run:
      #     name: "Install goss"
      #     command: |
      #       # molecule: command not found
      #       molecule lint --scenario-name ${MOLECULE_SCENARIO}                       
      # - save_cache:
      #     paths:
      #       - ./venv
      #     key: v1-dependencies-{{ checksum "requirements.txt" }}
      # - run:
      #     name: "Run tests"
      #     command: |
      #       . venv/bin/activate
      #       pip3 install pytest
      #       python manage.py test
      # - store_artifacts:
      #     path: test-reports
      #     destination: test-reports

  build-ruby-role-executor:
      executor: python/default
      environment:
        MOLECULE_SCENARIO: centos74-goss
      steps:
        - checkout
        - python/load-cache
        - python/install-deps
        - python/save-cache
        - run:
              name: "Update all"
              command: sudo apt-get -qq update          
        - run:
            name: Create virtualenv
            command: |
              python -V
              python3 -V
              pip3 --version
              pip3 install virtualenv
              virtualenv -p $(which python3) ~venvpy3
              source ~venvpy3/bin/activate
              pip install -r requirements.txt
              pip install --upgrade pip
              curl -fsSL https://goss.rocks/install | sudo sh
              molecule lint --scenario-name ${MOLECULE_SCENARIO}

workflows:
  commit-parallel-workflow:
    jobs:
      - build
      - build-ruby-role-image
      - build-ruby-role-executor

  # scheduled-workflow:
  #   triggers:
  #     - schedule:        
  #         cron: "0 0 1 * *" # execute in the first minute of the month
  #         # filters:
  #         #   branches:
  #         #     only: 
  #         #     - feature_circleci    jobs:
  #     - build
  #     - build-ruby-role